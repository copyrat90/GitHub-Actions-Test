# This is a basic workflow to help you get started with Actions

name: clang-format

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "clang_format"
  clang_format:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      - name: clang-format lint
      # You may pin to the exact commit or the version.
      # uses: DoozyX/clang-format-lint-action@9ea72631b74e61ce337d0839a90e76180e997283
        uses: DoozyX/clang-format-lint-action@v0.13
        with:
          # Source folder to check formatting
          # source: . # optional, default is .
          # Folder to exclude from formatting check
          exclude: build out # optional, default is none
          # List of extensions to check
          extensions: c,cpp,cc,cxx,h,hpp,hh,hxx,tpp,inl # optional, default is c,h,C,H,cpp,hpp,cc,hh,c++,h++,cxx,hxx
          # Version of clang-format
          clangFormatVersion: 13 # optional, default is 9
          # Formatting style to use
          # style: # optional, default is file
          # Just fix files (`clang-format -i`) instead of returning a diff
          inplace: True # optional
          
      - uses: EndBug/add-and-commit@v4
        with:
          author_name: Clang Robot
          author_email: robot@example.com
          message: 'Committing clang-format changes'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
